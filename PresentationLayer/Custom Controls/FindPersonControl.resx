<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAddNewPerson2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAABLNJREFUWEeN
        Vt9PHFUUnvXRv6KpL8aEBxPTxBcWqQZNExZ98MU0rZKC2FabirRFSWYRaCItqwhFUFIb21hKaJGlNFgo
        ZQkMKQqESBdmYGd/zlKgNP4DHHPunTt7752ZxW/z5c79Mff77jnnTlZRbAQCihIgP9raD/ZkYQ17oCv9
        Ib9Onw96ywPyC8IWwqS4Ur3/wWE1WvVteCRkqNHQvjpSaWD/m3tVr4hrZQUB/Dkk+Awj1NHKFjUagnA0
        BOpICMJIu//lrxVQ113+Pa4rskURBBSlLWW89nPWPNeb2bzcuvG0qS2xVo1jOK2OhlrC0UpAA8i9vV14
        sbdL2sbBY1ATKYWaSBA+tU0cADECv+eSr4/tbj8Z29mCse0twLY1sUbYgoxPT5JTc0RxxrO9R4l4baQU
        Put6Cz5qfrOkWBoFDGYyJXe3c/8ScY7MALJ5/kdHmBnhDaB4TUeQtpEg1HWVR6iqXfTFMLpjDY/tPBPE
        ZQPh8WqXqMjnnJlSON1VnqS7H6BuAbz8QBAuGMHQMwNqtMrDAIoWhPlo1HWX7XOXW4IzHFB+y6Y+5PMu
        RMD0iMALWnSyqGgA64BFgINoh9766/l0sywsp0BdXYamycuFAhyRa+C5k3tWC6euBDuLfpvYTH822SEL
        Mzavr0DtzRvQEJuET661CQYuDRxzDGBEqDi9hkhyC/xAxWl1/oIGtmne3zhyBEpKSsgz1gUKX4hNwtsf
        n4DjP3TA13+2OCbO9Bx1xFneGX2+A+5o4Ehf2rw6upMnomXvVkDF+1VOBNBAdX8fvHOSGsA+mmi49Z5w
        2gJLibhzwGJgi66YRmtvxoSBrawrBSjIiJFwnqdv/nTqarATr1pNJLhfGwmm8N67Pz4CpBm7226uX+pJ
        J6Ank4D+XBKGnuWcG8GLUk5Aw8wkNC0tNIqb+YCX9DPWbhplKM7zhpWCP3YsSbzApqWFMnkfGc4FYP8C
        fB0oitKd3qTiJBKmYwRPK6fh4uxjwHeKbMfj/8RAUfqyiXomeo2LxAUMuXT6r6Ye1svvFw4rthKKRSGg
        9GVNTTRhusQvxqbm5Dc94afjjHssUFX1pfb4SqEW0jQFrBDPjY0ArnG/Kx1f6LgWI9yD8bh2yDC0qcbZ
        aWicmYLvlhegM7EO9Y/G4fz4fThzbxA+Hx4EXddMw9CEAvQ7FO3KWlJfNxYOo7BhzIFhaNA8+8gJ9xfR
        u3B66DbUDdwibBi+Q9YYukaM6JIRf3Ci7GpY1vqrlhX/27LWIJVaho2NebL50OJj28AECf35iQdwdniQ
        GLitPURhsk5HI9g6ESmkQT6zjcKMlafCyLzd5nJxSCYXyaYDizHX1buzFKOn96Gua9efxrVDsqrLDTu1
        lafCDu1+NrsKicRfEFudhcj8FOHMP7MuQUyDPIYmJDk3LCuez1vr3Onps8x0egU2N59IIrRO/Izo+pwp
        61FwYZBDfxAdUUfIwwQzQFv/wkynlytkAS8Sc3ZKZJGDOSca4GvANBfriAhuLtcAL05IU0M25fPtkXue
        uqGdFLQ9DRAT3rmXKQj4iLMraVPlJP3/FPuh6HLPSRykE64TU4gjfM+9FuE9KoOTFMfY58b29R+XNbOE
        u65r2AAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnFindPerson.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>